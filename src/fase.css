body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    min-height: 100vh;
    margin: 0;
    background-image: url('assets/background_fases.jpg'); /* Substitua pela sua imagem */
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

@font-face {
    font-family: 'Pixolde';
    src: url('Pixolde.ttf') format('truetype');
}

body {
    font-family: 'Pixolde', sans-serif;
}


body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    min-height: 100vh; /* Ocupa toda a altura da tela */
    margin: 0;
    overflow: hidden;
    background-color: black;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 50%; /* Move a borda esquerda para o meio da tela */
    transform: translateX(-50%); /* Ajusta a posição para que o centro do elemento fique alinhado */
    bottom: 0;
    width: 100%; /* Mantém a largura desejada */
    max-width: 100%;
    background-image: url(assets/fundofases.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    filter: blur(2px);
    z-index: -1;
}

@keyframes zoomBackgroundTransition {
    0% {
        transform: translateX(-50%) scale(9.2);
        transform-origin: 50% 50%;
        opacity: 0;
    }
    100% {
        transform: translateX(-50%) scale(1);
        transform-origin: 50% 50%;
        opacity: 1;
    }
}

/* Animação contínua de leve movimento e zoom */
@keyframes backgroundFloat {
    0% {
        transform: translateX(-50%) scale(1);
    }
    50% {
        transform: translateX(-50%) scale(1.05);
    }
    100% {
        transform: translateX(-50%) scale(1);
    }
}

/* Aplica a animação inicial */
body.transition-effect::before {
    animation: zoomBackgroundTransition 1.5s forwards ease-in-out;
}

/* Aplica a animação contínua APÓS a transição */
body.floating-effect::before {
    animation: backgroundFloat 6s infinite alternate ease-in-out;
}

#fase-container {
    width: 60%;
    background: rgba(0, 0, 0, 0.7);
    padding: 20px;
    border-radius: 10px;
    color: white;
}

h1 {
    margin-bottom: 20px;
    image-rendering: pixelated;
    font-family: 'Pixolde', cursive;
}

.botoes-fase {
    display: flex;
    justify-content: center;
    gap: 15px;
    image-rendering: pixelated;
    font-family: 'Pixolde', cursive;
}

.fase-container {
    position: relative;
    display: inline-block;
}

/* Deixa o botão bloqueado com efeito de transparência */
.fase-container.bloqueada .fase {
    pointer-events: none; /* Impede o clique */
    opacity: 0.5; /* Deixa o botão mais apagado */
}

/* Cadeado sobre o botão bloqueado */
.cadeado {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px; /* Ajuste o tamanho do cadeado */
    height: 70px;
    image-rendering: pixelated; /* Mantém a aparência pixelada */
    pointer-events: none; /* O cadeado não interfere no clique */
}


.fase {
     font-family: 'Press Start 2P', cursive; /* Fonte pixelada */
    background-color: #c90000;
    color: white;
        padding: 15px 30px;
        font-size: 16px;
        border: 4px solid white;
        text-transform: uppercase;
        cursor: pointer;
        box-shadow: 4px 4px 0px black; /* Efeito 3D pixelado */
        transition: all 0.1s ease-in-out;
        image-rendering: pixelated; /* Mantém a aparência pixelada */
    }

.fase:hover {
    background-color: #5b0303a5;
    transform: translate(-2px, -2px); /* Dá um efeito de movimento */
    box-shadow: 6px 6px 0px black;
}

.fase:active{
transform: translate(2px, 2px); /* Efeito de pressionado */
    box-shadow: 2px 2px 0px black;
}